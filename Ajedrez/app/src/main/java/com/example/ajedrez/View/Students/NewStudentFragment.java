package com.example.ajedrez.View.Students;

import android.os.Bundle;
import android.text.Editable;
import android.text.TextWatcher;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;

import androidx.annotation.NonNull;
import androidx.appcompat.widget.AppCompatEditText;

import com.example.ajedrez.Model.Student;
import com.example.ajedrez.R;
import com.example.ajedrez.Utils.AlertsManager;
import com.example.ajedrez.Utils.GenericMethodsManager;
import com.example.ajedrez.View.BaseFragment;
import com.example.ajedrez.View.MainActivity;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;

import java.util.Objects;

public class NewStudentFragment extends BaseFragment {

    private Student newStudent =  new Student();
    private NewStudentListener mListener;

    public void setListener(MainActivity activity) {
        this.mListener = activity;
    }

    public static NewStudentFragment newInstance() {
        return new NewStudentFragment();
    }

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
    }

    @Override
    public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {

        View view = inflater.inflate(R.layout.fragment_student_new, container, false);
        FloatingActionButton add = view.findViewById(R.id.saveStudent);
        add.setOnClickListener(v -> createStudent());
        AppCompatEditText nameText = view.findViewById(R.id.nameText);
        nameText.addTextChangedListener(new TextWatcher() {
            public void afterTextChanged(Editable s) {
                newStudent.setName(s.toString());
            }
            public void beforeTextChanged(CharSequence s, int start, int count, int after) {}
            public void onTextChanged(CharSequence s, int start, int before, int count) {}
        });

        AppCompatEditText phoneNumberText = view.findViewById(R.id.phoneText);
        phoneNumberText.addTextChangedListener(new TextWatcher() {
            public void afterTextChanged(Editable s) {
                newStudent.setPhoneNumber(s.toString());
            }
            public void beforeTextChanged(CharSequence s, int start, int count, int after) {}
            public void onTextChanged(CharSequence s, int start, int before, int count) {}
        });

        AppCompatEditText birthDateText = view.findViewById(R.id.birthDateText);
        birthDateText.setOnClickListener(v ->
                GenericMethodsManager.getInstance().openCalendar(birthDateText, getContext()));
        birthDateText.addTextChangedListener(new TextWatcher() {
            public void afterTextChanged(Editable s) {
                newStudent.setBirthDay(s.toString());
            }
            public void beforeTextChanged(CharSequence s, int start, int count, int after) {}
            public void onTextChanged(CharSequence s, int start, int before, int count) {}
        });

        AppCompatEditText schoolText = view.findViewById(R.id.schoolText);
        schoolText.addTextChangedListener(new TextWatcher() {
            public void afterTextChanged(Editable s) {
                newStudent.setSchool(s.toString());
            }
            public void beforeTextChanged(CharSequence s, int start, int count, int after) {}
            public void onTextChanged(CharSequence s, int start, int before, int count) {}
        });

        String autoGeneratedDate = GenericMethodsManager.getInstance().getSimpleDate();
        AppCompatEditText firstClassText = view.findViewById(R.id.firstClassText);
        firstClassText.setText(autoGeneratedDate);
        newStudent.setStartingDate(autoGeneratedDate);
        newStudent.setLastClass(autoGeneratedDate);
        firstClassText.setOnClickListener(v ->
                GenericMethodsManager.getInstance().openCalendar(firstClassText, getContext()));
        firstClassText.addTextChangedListener(new TextWatcher() {
            public void afterTextChanged(Editable s) {
                newStudent.setStartingDate(s.toString());
                newStudent.setLastClass(s.toString());
            }
            public void beforeTextChanged(CharSequence s, int start, int count, int after) {}
            public void onTextChanged(CharSequence s, int start, int before, int count) {}
        });

        LinearLayout contentLayout = view.findViewById(R.id.contentLayout);
        contentLayout.setOnClickListener(v -> {
            hideKeyboardFrom(Objects.requireNonNull(getContext()),view);
        });

        return view;
    }

    private void createStudent(){
        if (newStudent.getName() == null) {
            AlertsManager.getInstance().showAlertDialog(getString(R.string.error_title), getString(R.string.error_name_required), getContext());
            return;
        }
        if (newStudent.getName().isEmpty()) {
            AlertsManager.getInstance().showAlertDialog(getString(R.string.error_title), getString(R.string.error_name_required), getContext());
            return;
        }
        FirebaseDatabase database = FirebaseDatabase.getInstance();
        DatabaseReference myRef = database.getReference("students");
        myRef.push().setValue(newStudent);
        mListener.onStudentCreated();
    }

    @Override
    public void onResume() {
        super.onResume();
        hideKeyboardFrom(Objects.requireNonNull(getContext()), Objects.requireNonNull(getView()));
    }

    public interface NewStudentListener {
        void onStudentCreated();
    }
}
